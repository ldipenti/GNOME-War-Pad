AC_PREREQ(2.52)
AC_INIT(GNOME War Pad, 0.3.1, lucas@lunix.com.ar)

AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE(gwp, 0.3.1)

AM_MAINTAINER_MODE
AC_PROG_INTLTOOL

AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AC_PROG_LIBTOOL

GNOME_COMPILE_WARNINGS

PKG_CHECK_MODULES(FOO, libgnomeui-2.0 libglade-2.0)
AC_SUBST(FOO_CFLAGS)
AC_SUBST(FOO_LIBS)

SCROLLKEEPER_BUILD_REQUIRED=0.3.5
AC_SUBST(SCROLLKEEPER_BUILD_REQUIRED)

dnl Checks for programs.

dnl ====================================
dnl = Begin tests for scrollkeeper
dnl ====================================
AC_PATH_PROG(SK_CONFIG,scrollkeeper-config,no)
if test x$SK_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find scrollkeeper-config. Please install the scrollkeeper package: http://scrollkeeper.sourceforge.net)
fi
dnl ====================================
dnl = End tests for scrollkeeper
dnl ====================================


dnl Checks for libraries.


dnl Checks for header files.


dnl Checks for typedefs, structures, and compiler characteristics.


dnl Checks for library functions.


dnl Checks for Additional stuffs.

dnl ====================================
dnl = Check for Python
dnl ====================================
AC_ARG_ENABLE(python,
	[  --enable-python	Enable Python language support.],,
	[enable_python="yes"])

if test "yes" = "$enable_python"; then
  AC_CHECK_PROG(python_val, python, true, false)
  HAVE_PYTHON=1
  AC_MSG_CHECKING(for Python)
  if $python_val; then
	PY_PREFIX=`python -c 'import sys ; print sys.prefix'`
	PY_EXEC_PREFIX=`python -c 'import sys ; print sys.exec_prefix'`
	changequote(<<, >>)dnl
	PY_VERSION=`python -c 'import sys ; print sys.version[0:3]'`
	changequote([, ])dnl
	if test -f $PY_PREFIX/include/python$PY_VERSION/Python.h; then
		PY_LIBS="-lpython$PY_VERSION"
		PY_LIB_LOC="-L$PY_EXEC_PREFIX/lib/python$PY_VERSION/config"
		PY_CFLAGS="-I$PY_PREFIX/include/python$PY_VERSION"
		PY_MAKEFILE="$PY_EXEC_PREFIX/lib/python$PY_VERSION/config/Makefile"
		PY_LOCALMODLIBS=`sed -n -e 's/^LOCALMODLIBS=\(.*\)/\1/p' $PY_MAKEFILE`
		PY_BASEMODLIBS=`sed -n -e 's/^BASEMODLIBS=\(.*\)/\1/p' $PY_MAKEFILE`
		PY_OTHER_LIBS=`sed -n -e 's/^LIBS=\(.*\)/\1/p' $PY_MAKEFILE`
		PY_EXTRA_LIBS="$PY_LOCALMODLIBS $PY_BASEMODLIBS $PY_OTHER_LIBS"
		AC_SUBST(PY_LIBS)
		AC_SUBST(PY_LIB_LOC)
		AC_SUBST(PY_CFLAGS)
		AC_SUBST(PY_EXTRA_LIBS)
		AC_DEFINE(USE_PYTHON, 1, Python support)
		AC_MSG_RESULT([version $PY_VERSION])
		HAVE_PYTHON="$PY_VERSION"
	else
		AC_MSG_RESULT([
		  Can't find Python headers or libraries
		  Continuing build without Python support.])
	fi
  fi
fi

dnl Languages which your application supports
GETTEXT_PACKAGE=gwp
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",[The gettext package])
ALL_LINGUAS="es de fr"
AM_GLIB_GNU_GETTEXT

dnl Set PACKAGE_LOCALE_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale", "Description")
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale", "Description")
fi


dnl Set PACKAGE SOURCE DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`

dnl Set PACKAGE PREFIX
if test "x${prefix}" = "xNONE"; then
  packageprefix=${ac_default_prefix}
else
  packageprefix=${prefix}
fi

dnl Set PACKAGE DATA & DOC DIR
packagedatadir=share/${PACKAGE}
packagedocdir=doc/${PACKAGE}

dnl Set PACKAGE DIRs in config.h.
packagepixmapsdir=share/pixmaps/${PACKAGE}
packagehelpdir=share/gnome/help/${PACKAGE}
packagemenudir=share/gnome/apps

dnl Subst PACKAGE_DATA_DIR.
NO_PREFIX_PACKAGE_DATA_DIR="${packagedatadir}"
AC_SUBST(NO_PREFIX_PACKAGE_DATA_DIR)
PACKAGE_DATA_DIR="${packageprefix}/${packagedatadir}"
AC_SUBST(PACKAGE_DATA_DIR)

dnl Subst PACKAGE_DOC_DIR.
NO_PREFIX_PACKAGE_DOC_DIR="${packagedocdir}"
AC_SUBST(NO_PREFIX_PACKAGE_DOC_DIR)
PACKAGE_DOC_DIR="${packageprefix}/${packagedocdir}"
AC_SUBST(PACKAGE_DOC_DIR)

dnl Subst PACKAGE_PIXMAPS_DIR.
NO_PREFIX_PACKAGE_PIXMAPS_DIR="${packagepixmapsdir}"
AC_SUBST(NO_PREFIX_PACKAGE_PIXMAPS_DIR)
PACKAGE_PIXMAPS_DIR="${packageprefix}/${packagepixmapsdir}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)

dnl Subst PACKAGE_HELP_DIR.
NO_PREFIX_PACKAGE_HELP_DIR="${packagehelpdir}"
AC_SUBST(NO_PREFIX_PACKAGE_HELP_DIR)
PACKAGE_HELP_DIR="${packageprefix}/${packagehelpdir}"
AC_SUBST(PACKAGE_HELP_DIR)

dnl Subst PACKAGE_MENU_DIR.
NO_PREFIX_PACKAGE_MENU_DIR="${packagemenudir}"
AC_SUBST(NO_PREFIX_PACKAGE_MENU_DIR)
PACKAGE_MENU_DIR="${packageprefix}/${packagemenudir}"
AC_SUBST(PACKAGE_MENU_DIR)

AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${packageprefix}/${packagedatadir}", "Description")
AC_DEFINE_UNQUOTED(PACKAGE_DOC_DIR, "${packageprefix}/${packagedocdir}", "Description")
AC_DEFINE_UNQUOTED(PACKAGE_PIXMAPS_DIR, "${packageprefix}/${packagepixmapsdir}", "Description")
AC_DEFINE_UNQUOTED(PACKAGE_HELP_DIR, "${packageprefix}/${packagehelpdir}", "Description")
AC_DEFINE_UNQUOTED(PACKAGE_MENU_DIR, "${packageprefix}/${packagemenudir}", "Description")
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}", "Description")

AC_OUTPUT([
Makefile
src/Makefile
help/Makefile
help/C/Makefile
po/Makefile.in
pixmaps/Makefile
pixmaps/planets/Makefile
pixmaps/ships/Makefile
pixmaps/races/Makefile
gwp.desktop
])

echo
echo \-\*\- GNOME War Pad \-\*\-
echo
echo Build Configuration:
echo

if test "$HAVE_PYTHON" != ""; then
  echo - Python version $HAVE_PYTHON.
else
  echo - No Python support.
fi

echo
echo configure complete, now type \'make\'
