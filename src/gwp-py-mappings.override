%%
headers
#include <Python.h>
#include <pygobject.h>
#include "global.h"
#include "gwp-engspec.h"
#include "gwp-hullspec.h"
#include "gwp-beamspec.h"
#include "gwp-torpspec.h"
#include "gwp-object.h"
#include "gwp-planet.h"
#include "gwp-flying-object.h"
#include "gwp-ion-storm.h"
#include "gwp-ship.h"
#include "gwp-starbase.h"
#include "gwp-location.h"
#include "gwp-minefield.h"
#include "gwp-py-functions.h"
%%
modulename gwp
%%
import gobject.GObject as PyGObject_Type
%%
ignore-glob
  *_get_type
%%
override gwp_ship_get_waypoint noargs
static PyObject *
_wrap_gwp_ship_get_waypoint (PyGObject *self)
{
  int wp_x, wp_y;
  
  gwp_ship_get_waypoint (GWP_SHIP (self->obj), &wp_x, &wp_y);
  
  return Py_BuildValue("(ii)", wp_x, wp_y); 
}
%%
override ship_get_list noargs
static PyObject *
_wrap_ship_get_list (PyObject *self)
{
  PyObject *ret = PyDict_New();

  static void add_ship (gpointer key, gpointer value, gpointer user_data) {
    PyObject *dict = (PyObject *)user_data;
    GwpShip *ship = GWP_SHIP(value);

    PyDict_SetItem (dict, 
		    PyInt_FromLong(gwp_object_get_id(GWP_OBJECT(ship))),
		    pygobject_new((GObject *)ship));
  }
  
  g_hash_table_foreach (ship_list, (GHFunc)add_ship, (gpointer)ret);

  return ret;
}
%%
override planet_get_list noargs
static PyObject *
_wrap_planet_get_list (PyObject *self)
{
  PyObject *ret = PyDict_New();

  static void add_planet (gpointer key, gpointer value, gpointer user_data) {
    PyObject *dict = (PyObject *)user_data;
    GwpPlanet *planet = GWP_PLANET(value);

    PyDict_SetItem (dict, 
		    PyInt_FromLong(gwp_object_get_id(GWP_OBJECT(planet))),
		    pygobject_new((GObject *)planet));
  }
  
  g_hash_table_foreach (planet_list, (GHFunc)add_planet, (gpointer)ret);

  return ret;
}
